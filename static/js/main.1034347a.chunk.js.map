{"version":3,"sources":["components/ToDoItem.js","components/AddTaskForm.js","views/TodoList.js","views/Pagination/Pagination.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","secondary","display","flexDirection","ToDoItem","id","name","date","time","timeout","isFirstRender","isCompleted","onChangeStatus","onDelete","classes","useState","anchorEl","setAnchorEl","handleClose","Grow","in","key","Math","random","unmountOnExit","style","transformOrigin","Paper","elevation","className","marginBottom","backgroundColor","Typography","variant","title","flexGrow","IconButton","fontSize","onClick","aria-controls","aria-haspopup","event","currentTarget","root","Menu","keepMounted","open","Boolean","onClose","MenuList","MenuItem","ListItemIcon","AddTaskForm","onSubmit","isOpen","setOpen","setName","React","Date","setDate","setTime","Fab","aria-label","fontWeight","Modal","disableBackdropClick","aria-labelledby","aria-describedby","cursor","float","e","preventDefault","toLocaleDateString","toLocaleTimeString","completed","TextField","label","required","onChange","target","value","utils","DateFnsUtils","margin","format","KeyboardButtonProps","Button","type","TodoList","setIsFirstRender","toDos","setToDos","setCompletedStatus","newStatus","selectedItem","find","todo","otherItems","filter","alert","deleteToDo","newList","useEffect","AppBar","position","Toolbar","Grid","container","item","xs","sm","md","lg","minHeight","paddingRight","component","map","index","console","log","Pagination","list","setList","undefined","nextToken","setNextToken","nextNextToken","setNextNextToken","previousTokens","setPreviousTokens","fetch","method","body","JSON","stringify","LastEvaluatedKey","then","response","json","data","Items","catch","marginTop","PK","SK","copy","b","pop","c","themeLight","createMuiTheme","background","default","App","basename","CssBaseline","exact","path","ToDoList","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1034347a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport NotCompletedIcon from '@material-ui/icons/CheckCircleOutline';\nimport UndoCompletedIcon from '@material-ui/icons/Undo';\nimport MoreVerticalIcon from '@material-ui/icons/MoreVert';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Grow from '@material-ui/core/Grow';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'left',\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    flexDirection: 'row',\n  },\n}));\n\nconst ToDoItem = ({ id, name, date, time, timeout, isFirstRender, isCompleted, onChangeStatus, onDelete }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Grow\n      in={true}\n      key={Math.random()}\n      unmountOnExit={true}\n      style={{ transformOrigin: `0 0 0` }}\n      {...{ timeout: isFirstRender ? timeout : 1000 }}\n    >\n      <Paper\n        elevation={3}\n        className={classes.paper}\n        style={{\n          color: isCompleted ? 'white' : 'black',\n          marginBottom: '2%',\n          backgroundColor: isCompleted ? '#35C706' : 'white',\n        }}\n      >\n        {/* Todo item details */}\n        <div>\n          <Typography variant=\"h6\" className={classes.title}>\n            {name}\n          </Typography>\n          <Typography variant=\"subtitle1\">\n            {date} | {time}\n          </Typography>\n        </div>\n        <div style={{ flexGrow: 1 }}></div>\n        {/* Show corresponding icons based on completion status */}\n        {isCompleted ? (\n          <div>\n            <IconButton>\n              <UndoCompletedIcon style={{ color: 'red', fontSize: 30 }} onClick={() => onChangeStatus(id, false)} />\n            </IconButton>\n          </div>\n        ) : (\n          <IconButton>\n            <NotCompletedIcon style={{ fontSize: 30 }} onClick={() => onChangeStatus(id, true)} />\n          </IconButton>\n        )}\n        {/* Todo options menu */}\n\n        <IconButton\n          aria-controls=\"customized-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClick}\n        >\n          <MoreVerticalIcon style={{ color: isCompleted ? 'white' : 'black', fontSize: 25 }} />\n        </IconButton>\n\n        <Paper className={classes.root}>\n          <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n            <MenuList id=\"todo-options\">\n              <MenuItem\n                onClick={() => {\n                  onDelete(id);\n                  handleClose();\n                }}\n              >\n                <ListItemIcon>\n                  <DeleteIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <Typography variant=\"inherit\">Delete</Typography>\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        </Paper>\n      </Paper>\n    </Grow>\n  );\n};\n\nexport default ToDoItem;\n","import React, { useState } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Fab from '@material-ui/core/Fab';\n// date and time utils\nimport 'date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst AddTaskForm = ({ onSubmit }) => {\n  const [isOpen, setOpen] = useState(false);\n  //form values\n  const [name, setName] = useState('');\n  const [date, setDate] = React.useState(new Date());\n  const [time, setTime] = React.useState(new Date());\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleDateChange = (date) => {\n    setDate(date);\n  };\n\n  const handleTimeChange = (time) => {\n    setTime(time);\n  };\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSubmit({\n      id: Math.random(),\n      name,\n      date: date.toLocaleDateString(),\n      time: time.toLocaleTimeString(),\n      completed: false,\n    });\n    handleClose();\n  }\n\n  return (\n    <div>\n      <Fab id=\"add_todo_button\" color=\"primary\" aria-label=\"add\">\n        <IconButton onClick={handleOpen}>\n          <AddIcon style={{ color: 'white', fontWeight: 'bold' }} />\n        </IconButton>\n      </Fab>\n      <Modal\n        open={isOpen}\n        disableBackdropClick\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div className=\"add-todo-modal\">\n          <CloseIcon onClick={handleClose} style={{ cursor: 'pointer', float: 'right', marginBottom: '3%' }} />\n          <Typography variant=\"h6\" style={{ marginBottom: '4%' }}>\n            Add new Todo\n          </Typography>\n          <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column' }}>\n            <TextField id=\"outlined-basic\" label=\"name\" required variant=\"outlined\" onChange={handleNameChange} />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Date\"\n                format=\"MM/dd/yyyy\"\n                required\n                value={date}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n              <KeyboardTimePicker\n                margin=\"normal\"\n                id=\"time-picker\"\n                label=\"Time\"\n                value={time}\n                required\n                onChange={handleTimeChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change time',\n                }}\n              />\n            </MuiPickersUtilsProvider>\n            <Button type=\"submit\" style={{ backgroundColor: 'green', color: 'white' }}>\n              <Typography variant=\"h6\">Create</Typography>\n            </Button>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddTaskForm;\n","import React, { useState, useEffect } from 'react';\nimport ToDoItem from '../components/ToDoItem';\nimport AddTaskForm from '../components/AddTaskForm';\n// Material UI component imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport './todolist.css';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst TodoList = () => {\n  const classes = useStyles();\n  const [isFirstRender, setIsFirstRender] = useState(true);\n  const [toDos, setToDos] = useState([\n    {\n      id: Math.random(),\n      name: 'Go shopping',\n      date: '05-11-2020',\n      time: '11:00 AM',\n      completed: false,\n    },\n    {\n      id: Math.random(),\n      name: 'Bathing the dog',\n      date: '01-04-2020',\n      time: '02:25 PM',\n      completed: false,\n    },\n    {\n      id: Math.random(),\n      name: 'Practice Kungfu',\n      date: '07-09-2020',\n      time: '10:45 AM',\n      completed: true,\n    },\n    {\n      id: Math.random(),\n      name: 'Drive Aston Martin',\n      date: '15-10-2020',\n      time: '12:00 PM',\n      completed: true,\n    },\n    {\n      id: Math.random(),\n      name: 'Sleep',\n      date: '05-11-2020',\n      time: '1:20 AM',\n      completed: false,\n    },\n  ]);\n\n  useEffect(() => {\n    setIsFirstRender(false);\n  });\n\n  function addToDo(todo) {\n    console.log(todo);\n    setToDos([...toDos, todo]);\n  }\n\n  function setCompletedStatus(id, newStatus) {\n    let selectedItem = toDos.find((todo) => todo.id === id);\n    if (!selectedItem) {\n      alert(\"Item doesn't exist.\");\n      return;\n    }\n    selectedItem.completed = newStatus;\n\n    const otherItems = toDos.filter((todo) => todo.id !== id);\n    setToDos([...otherItems, selectedItem]);\n  }\n\n  function deleteToDo(id) {\n    let newList = toDos.filter((todo) => todo.id !== id);\n    setToDos(newList);\n  }\n  return (\n    <div>\n      {/* AppBar */}\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            The LiveRoom Todo App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      {/* Main Container */}\n      <Grid container spacing={0} className=\"main_container\">\n        {/* To do work */}\n        <Grid item xs={12} sm={12} md={6} lg={6} style={{ minHeight: '40vh', padding: '1%', paddingRight: '1%' }}>\n          <Typography variant=\"h5\" component=\"h5\" style={{ textAlign: 'left', marginBottom: '1%' }}>\n            To do\n          </Typography>\n          {toDos\n            .filter((item) => !item.completed)\n            .map((item, index) => (\n              <ToDoItem\n                id={item.id}\n                isFirstRender={isFirstRender}\n                timeout={250 * (index + 1)}\n                name={item.name}\n                date={item.date}\n                time={item.time}\n                onChangeStatus={setCompletedStatus}\n                onDelete={deleteToDo}\n                isCompleted={item.completed}\n              />\n            ))}\n        </Grid>\n        {/* Completed tasks */}\n        <Grid item xs={12} sm={12} md={6} lg={6} style={{ minHeight: '40vh', padding: '1%', paddingRight: '1%' }}>\n          <Typography variant=\"h5\" component=\"h5\" style={{ textAlign: 'left', marginBottom: '1%' }}>\n            Done\n          </Typography>\n          {toDos\n            .filter((item) => item.completed)\n            .map((item, index) => (\n              <ToDoItem\n                id={item.id}\n                isFirstRender={isFirstRender}\n                name={item.name}\n                date={item.date}\n                timeout={900 * (index + 1)}\n                time={item.time}\n                onChangeStatus={setCompletedStatus}\n                onDelete={deleteToDo}\n                isCompleted={item.completed}\n              />\n            ))}\n        </Grid>\n      </Grid>\n      <AddTaskForm onSubmit={addToDo} />\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ToDoItem from '../../components/ToDoItem';\r\nimport './pagination.css';\r\n\r\nconst Pagination = () => {\r\n  const [list, setList] = useState([]);\r\n\r\n  const [nextToken, setNextToken] = useState(undefined);\r\n  const [nextNextToken, setNextNextToken] = useState();\r\n  const [previousTokens, setPreviousTokens] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://af5xufo4j6.execute-api.us-east-1.amazonaws.com/test/all', {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      body: JSON.stringify({ LastEvaluatedKey: nextToken }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setNextNextToken(data.LastEvaluatedKey);\r\n        setList(data.Items);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, [nextToken]);\r\n\r\n  const next = () => {\r\n    setPreviousTokens((c) => [...c, nextToken]);\r\n    setNextToken(nextNextToken);\r\n  };\r\n\r\n  const prev = () => {\r\n    const copy = [...previousTokens];\r\n    const b = copy.pop();\r\n    setPreviousTokens(copy);\r\n    setNextToken(b);\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container spacing={0} className=\"main_container\">\r\n        <Grid item xs={12} sm={12} md={2} lg={2}></Grid>\r\n        <Grid item xs={12} sm={12} md={8} lg={8} style={{ marginTop: '3%' }}>\r\n          {list.map((item,index) => {\r\n            return <ToDoItem id={Math.random()} timeout={250 * (index + 1)} name={item.PK} date={item.SK} />;\r\n          })}\r\n          <div id=\"btn_container\">\r\n            <Button variant=\"contained\" onClick={prev} color=\"primary\">\r\n              prev\r\n            </Button>\r\n            <div style={{ flexGrow: 1 }} />\r\n            <Button variant=\"contained\" onClick={next} color=\"primary\">\r\n              next\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n// Other imports\nimport { HashRouter, Route } from 'react-router-dom';\nimport ToDoList from './views/TodoList';\nimport Pagination from './views/Pagination/Pagination';\nimport './App.css';\n\nconst themeLight = createMuiTheme({\n  palette: {\n    background: {\n      default: '#D4E0E4',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/liveroom-react-todo-app\">\n      <MuiThemeProvider theme={themeLight}>\n        <CssBaseline />\n        <div className=\"App\">\n          <Route exact path=\"/\" component={ToDoList} />\n          <Route path=\"/pagination\" component={Pagination} />\n        </div>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}